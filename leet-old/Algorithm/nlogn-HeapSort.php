<?php
/**
 * Created by PhpStorm.
 * User: xxx
 * Date: 2020/2/19
 * Time: 18:20
 */


/**
 * 堆排序
 *
 * 树：某个节点有一个或多个子节点的数据结构
 * 二叉树：子节点最多有两个
 * 满二叉树：子节点只能有两个。与下面的完全二叉树，是同一个维度下概念。
 * 完全二叉树：叶子节点都在最底下两层，最后一层叶子节都靠左排列，并且除了最后一层，其他层的节点个数都要达到最大（2个）
 *
 * 堆：基础条件是一棵完全二叉树。
 * 大顶堆：每个节点的值都大于或等于其左右孩子节点的值
 * 小顶堆：每个节点的值都小于或等于其左右孩子节点的值
 * 知道某个节点位置i，计算得到子节点：左（2i+1），右（2i+2）,父（(i-1)/2）
 *
 * @param $arr
 * @return mixed
 */
function heapSort ($arr)
{
    /**
     * 初始化堆的复杂度为O(n)：
     *      对于每个非叶子结点，都要调用buildHeap，将它与它的孩子结点进行比较和交换，顺序是从后向前。
     *      buildHeap方法
     *
     * 调整堆的复杂度为O(n*log n)
     *         heapSort：每次从堆顶拿走一个节点，然后将堆尾元素放到堆顶再进行堆化。
     *                  分析：共需要拿走 n 个节点；
     *                      每拿走一个节点需要堆化，操作的时间复杂度 logN，即跟该节点所在的高度有关
     *                  所以：调整n个节点为 O(N logN)
     *
     * 所以，总体复杂度为O(n*log n)
     */
    // 需要结合heap本身的结构写，所以查看 DataStructure/Heap.php 下的 heapSort 方法；
    return $arr;
}